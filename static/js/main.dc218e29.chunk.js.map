{"version":3,"sources":["header.js","app.js","mid.js","index.js"],"names":["Component","Mid","state","topText","bottomText","data","imageURL","handleChange","bind","handleClick","console","log","fetch","then","response","json","setState","memes","event","target","name","value","this","preventDefault","random","Math","floor","newImageURL","url","id","props","text","type","placeholder","onChange","onClick","src","className","ReactDOM","render","document","getElementById"],"mappings":"iQAGoCA,Y,mBCAfC,GCAYD,Y,YDChC,aAAc,IAAD,8BACZ,+CACKE,MAAQ,CACZC,QAAU,QACVC,WAAa,UACbC,KAAO,GACPC,SAAS,kCAEV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATP,E,iFAaO,IAAD,OAClBE,QAAQC,IAAI,mBACZC,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAC,GAAQ,OACd,EAAKE,SACJ,CACCX,KAAOS,EAAST,KAAKY,a,mCAMZC,GAAO,IAAD,EACGA,EAAMC,OAApBC,EADW,EACXA,KAAKC,EADM,EACNA,MACZC,KAAKN,SAAL,eAEGI,EAAQC,M,kCAKAH,GACXA,EAAMK,iBACN,IAAIC,EAASC,KAAKC,MAAsB,IAAhBD,KAAKD,UACzBG,EAAcL,KAAKpB,MAAMG,KAAKmB,GAAQI,IAC1ClB,QAAQC,IAAIgB,GACZL,KAAKN,SACJ,CACCV,SAAWqB,M,+BAOb,OACC,yBAAKE,GAAG,cACP,yBAAKA,GAAG,UACNP,KAAKQ,MAAMC,MAEb,8BACC,2BACAC,KAAK,OACLZ,KAAK,UACLa,YAAY,WACZZ,MAAQC,KAAKpB,MAAMC,QACnB+B,SAAYZ,KAAKf,eAEjB,2BACAyB,KAAK,OACLZ,KAAK,aACLa,YAAY,cACZZ,MAAQC,KAAKpB,MAAME,WACnB8B,SAAYZ,KAAKf,eAEjB,4BAAQ4B,QAASb,KAAKb,aAAtB,UAGD,yBAAKoB,GAAG,QACP,yBAAKO,IAAKd,KAAKpB,MAAMI,WACrB,yBAAK+B,UAAU,eAAf,IAA+Bf,KAAKpB,MAAMC,QAA1C,KACA,yBAAKkC,UAAU,kBAAf,IAAkCf,KAAKpB,MAAME,WAA7C,W,GA5E4BJ,cEIjCsC,IAASC,OACR,6BACC,kBAAC,EAAD,CAAKR,KAAK,oBAEXS,SAASC,eAAe,W","file":"static/js/main.dc218e29.chunk.js","sourcesContent":["import React , {Component}from 'react'\nimport ReactDOM from 'react-dom'\n\nexport default class Header extends Component {\n\tconstructor(){\n\t\tsuper()\n\n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t\t<div id=\"header\">\n\t\t\t\t{this.props.text}\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\n\nexport default class Mid extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttopText : 'heelo',\n\t\t\tbottomText : 'watshap',\n\t\t\tdata : '',\n\t\t\timageURL:\"https://i.imgflip.com/1bij.jpg\",\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\n\tcomponentDidMount(){\n\t\tconsole.log('loading API now')\n\t\tfetch('https://api.imgflip.com/get_memes')\n\t\t.then(response => response.json())\n\t\t.then( response => \n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tdata : response.data.memes,\n\t\t\t\t}\n\t\t\t)\t\n\t\t);\n\t}\n\n\thandleChange(event){\n\t\tconst {name,value} = event.target;\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\t[name] : value\t\n\t\t\t}\n\t\t);\n\t}\n\n\thandleClick(event){\n\t\tevent.preventDefault();\n\t\tlet random = Math.floor(Math.random() * 100);\n\t\tlet newImageURL = this.state.data[random].url;\n\t\tconsole.log(newImageURL)\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\timageURL : newImageURL\n\t\t\t}\n\t\t);\n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t\t<div id=\"midContent\">\n\t\t\t\t<div id=\"header\">\n\t\t\t\t\t{this.props.text}\n\t\t\t\t</div>\n\t\t\t\t<form>\n\t\t\t\t\t<input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"topText\"\n\t\t\t\t\tplaceholder=\"top text\"\n\t\t\t\t\tvalue= {this.state.topText}\n\t\t\t\t\tonChange = {this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"bottomText\"\n\t\t\t\t\tplaceholder=\"bottom text\"\n\t\t\t\t\tvalue= {this.state.bottomText}\n\t\t\t\t\tonChange = {this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={this.handleClick}> Gen </button>\n\t\t\t\t</form>\n\n\t\t\t\t<div id=\"meme\" >\n\t\t\t\t\t<img src={this.state.imageURL} />\n\t\t\t\t\t<div className=\"memeTopText\"> {this.state.topText} </div>\n\t\t\t\t\t<div className=\"memeBottomText\"> {this.state.bottomText} </div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\n\nexport default class Mid extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttopText : 'heelo',\n\t\t\tbottomText : 'watshap',\n\t\t\tdata : '',\n\t\t\timageURL:\"https://i.imgflip.com/1bij.jpg\",\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\n\tcomponentDidMount(){\n\t\tconsole.log('loading API now')\n\t\tfetch('https://api.imgflip.com/get_memes')\n\t\t.then(response => response.json())\n\t\t.then( response => \n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tdata : response.data.memes,\n\t\t\t\t}\n\t\t\t)\t\n\t\t);\n\t\tconsole.log('finished Loading API')\n\t}\n\n\thandleChange(event){\n\t\tconst {name,value} = event.target;\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\t[name] : value\t\n\t\t\t}\n\t\t);\n\t}\n\n\thandleClick(){\n\t\tlet random = Math.floor(Math.random() * 100);\n\t\tlet newImageURL = this.state.data[random].url;\n\t\tconsole.log(newImageURL)\n\t\tthis.setState({\n\t\t\timageURL : newImageURL\n\t\t})\n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t\t<div id=\"midContent\">\n\t\t\t\t<form>\n\t\t\t\t\t<input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"topText\"\n\t\t\t\t\tplaceholder=\"top text\"\n\t\t\t\t\tvalue= {this.state.topText}\n\t\t\t\t\tonChange = {this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"bottomText\"\n\t\t\t\t\tplaceholder=\"bottom text\"\n\t\t\t\t\tvalue= {this.state.bottomText}\n\t\t\t\t\tonChange = {this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={this.handleClick}> Gen </button>\n\t\t\t\t</form>\n\n\t\t\t\t<div id=\"meme\" >\n\t\t\t\t\t<img src={this.state.imageURL} />\n\t\t\t\t\t<div className=\"memeTopText\"> {this.state.topText} </div>\n\t\t\t\t\t<div className=\"memeBottomText\"> {this.state.bottomText} </div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Header from './header.js'\nimport './index.css'\nimport Mid from './mid.js'\nimport App from './app.js'\n\nReactDOM.render(\n\t<div>\n\t\t<App text=\"meme generator\"/>\n\t</div>,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}